{"version":3,"sources":["../src/js/bundle.js"],"names":["angular","module","value","document","run","$inject","$rootScope","$window","$document","isMobile","store","msgService","find","addClass","styleSheets","styleSheet","rules","i","length","selectorText","match","deleteRule","ex","addEventListener","unsubscribe","setSettings","undo","showName","animation","color","values","setUser","uuid","name","channel","isHost","config","$routeProvider","$cookiesProvider","toastrConfig","when","templateUrl","controller","resolve","access","otherwise","redirectTo","extend","newestOnTop","maxOpened","target","defaults","expires","$location","$q","onChangeError","$on","event","current","previous","rejection","path","getUser","reject","EstimateController","$scope","$timeout","toastr","undoTimeout","selected","undoEnabled","settings","listen","reset","saveSettings","onRemoved","listenPresence","onUserLeft","send","type","message","selectCard","selectedValue","cancel","isSelected","data","hostUuid","warning","leaveChannel","LoginController","$cookies","_","states","isLoading","state","SELECT_MODE","title","defaultSettings","getSettings","subscribe","onUserChanged","changeState","newState","userName","channels","CREATE_CHANNEL","get","SETTINGS","JOIN_CHANNEL","loadChannels","back","callback","noop","hereNow","status","keys","createChannel","trim","info","includes","error","success","put","joinChannel","saveSettingsToCookie","JSON","stringify","loadDefaultSettings","forIn","key","copy","cookieSettingsString","cookieSettings","parse","merge","user","init","MainController","hasChannel","ResultController","canUndo","flip","selectedCard","cards","onUserPicked","onUserJoined","onUserUndo","forEach","card","_card","removeSelectedCard","pull","checkStats","findCardByUuid","remove","sendSettingsToUser","push","resetFor","done","every","settingsToSend","reduce","result","factory","pubNub","listeners","PubNub","generateUUID","publishKey","subscribeKey","withPresence","removeListener","publish","listener","$evalAsync","addListener","actions","presence","action","pubNubCallback","params","uuids","subscriptions","$watchCollection","newVal","oldVal","originalCallback","subscription"],"mappings":"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","file":"bundle.js","sourcesContent":["(() => {\r\n    'use strict';\r\n\r\n    /**\r\n     * \r\n     * Story point task estimator\r\n     * Made with PubNub: no backend required\r\n     * It might work in IE, but i dont care about it. Use it with Chrome.\r\n     * Because of the limitations of the PubNub's free package (100 UUID/day), the application wont work with 2 clients in the same browser.\r\n     * \r\n     * @author Daniel Biro\r\n     * \r\n     */\r\n    angular\r\n        .module('estimate', [\r\n            'ngRoute',\r\n            'ngCookies',\r\n            'ngAnimate',\r\n            'ngLodash',\r\n            'toastr'\r\n        ])\r\n        .value('isMobile', (() => 'ontouchstart' in document )())\r\n        .run(run);\r\n    \r\n    run.$inject = [\"$rootScope\", \"$window\", \"$document\", \"isMobile\", \"store\", \"msgService\"];\r\n\r\n    function run($rootScope, $window, $document, isMobile, store, msgService) {\r\n        if (isMobile) {\r\n            // Adding mobile class to body\r\n            $document.find(\"body\").addClass(\"mobile\");\r\n\r\n            // Remove :hover and :active css rules on touch devices\r\n            // Prevent exception on browsers not supporting DOM styleSheets properly\r\n            try {\r\n                for (let styleSheet of document.styleSheets) {\r\n                    if (!styleSheet.rules) {\r\n                        continue;\r\n                    }\r\n\r\n                    for (let i = styleSheet.rules.length - 1; i >= 0; i--) {\r\n                        if (!styleSheet.rules[i].selectorText) continue;\r\n\r\n                        if (styleSheet.rules[i].selectorText.match(':hover') || styleSheet.rules[i].selectorText.match(':active')) {\r\n                            styleSheet.deleteRule(i);\r\n                        }\r\n                    }\r\n                }\r\n            } catch (ex) {}\r\n        }\r\n\r\n        // Unsubscribe on page unload\r\n        $window.addEventListener(\"beforeunload\", () => {\r\n            msgService.unsubscribe();\r\n        });\r\n\r\n        // Fill up store with default settings\r\n        store.setSettings({\r\n            undo: true,\r\n            showName: true,\r\n            animation: true,\r\n            color: \"#2670e0\",\r\n            values: {\r\n                0: true, 1: true, 2: true, 3: true, 5: true, 8: true,\r\n                13: true, 20: true, 40: true, \"∞\": true, \"?\": true\r\n            }\r\n        });\r\n\r\n        // Fill up store with default user data\r\n        store.setUser({\r\n            uuid: null,\r\n            name: null,\r\n            channel: null,\r\n            isHost: false\r\n        });\r\n    }\r\n\r\n})();;(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('estimate')\r\n        .config(config);\r\n\r\n    config.$inject = ['$routeProvider', '$cookiesProvider', 'toastrConfig'];\r\n\r\n    function config ($routeProvider, $cookiesProvider, toastrConfig) {\r\n        // Routes config\r\n        $routeProvider\r\n            .when('/login', {\r\n                templateUrl: '/src/templates/login.html',\r\n                controller: 'LoginController'\r\n            })\r\n            .when('/results', {\r\n                templateUrl: '/src/templates/result.html',\r\n                controller: 'ResultController',\r\n                resolve: {\r\n                    access: ['$rootScope', '$location', '$q', 'store', access]\r\n                }\r\n            })\r\n            .when('/estimate', {\r\n                templateUrl: '/src/templates/estimate.html',\r\n                controller: 'EstimateController',\r\n                resolve: {\r\n                    access: ['$rootScope', '$location', '$q', 'store', access]\r\n                }\r\n            })\r\n            .otherwise({\r\n                redirectTo: '/login'\r\n            });\r\n\r\n        // Toastr config\r\n        angular.extend(toastrConfig, {\r\n            newestOnTop: true,\r\n            maxOpened: 5,\r\n            target: 'body'\r\n        });\r\n\r\n        // Cookie config\r\n        $cookiesProvider.defaults.expires = \"2030-12-30T12:00:00.000Z\"\r\n        \r\n        // This function gets called before the navigation happens\r\n        // If a resolve function like this returns a rejected promise, a $routeChangeError will be emitted on the $rootScope\r\n        // We listen once to the $routeChangeError and redirect the page to \"/\"\r\n        function access ($rootScope, $location, $q, store) {\r\n            let onChangeError = $rootScope.$on(\"$routeChangeError\", (event, current, previous, rejection) => {\r\n                $location.path('/');\r\n\r\n                onChangeError();\r\n            });\r\n\r\n            return store.getUser().uuid ? true : $q.reject();\r\n        }\r\n    }\r\n\r\n}());\r\n;(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('estimate')\r\n        .controller('EstimateController', EstimateController);\r\n\r\n    EstimateController.$inject = ['$rootScope', '$scope', '$timeout', 'toastr', 'store', 'msgService'];\r\n\r\n    function EstimateController ($rootScope, $scope, $timeout, toastr, store, msgService) {\r\n        let undoTimeout;\r\n\r\n        $scope.selected = false;\r\n        $scope.undoEnabled = true;\r\n        $scope.settings = {\r\n            undo: true,\r\n            values: []\r\n        };\r\n\r\n        //////////////////////////////////////////////////////////////\r\n\r\n        msgService.listen(\"RESET\", reset);\r\n        msgService.listen(\"SETTINGS\", saveSettings);\r\n        msgService.listen(\"REMOVE\", onRemoved);\r\n        msgService.listenPresence([\"leave\", \"timeout\"], onUserLeft);\r\n        msgService.send({\r\n            type: \"USER_JOINED\",\r\n            message: store.getUser()\r\n        });\r\n\r\n        $scope.selectCard = (value) => {\r\n            if ($scope.selected) {\r\n                return;\r\n            }\r\n\r\n            $scope.selectedValue = value;\r\n            $scope.selected = true;\r\n\r\n            msgService.send({\r\n                type: \"USER_PICKED\",\r\n                message: {\r\n                    value: value,\r\n                    uuid: store.getUser().uuid\r\n                }\r\n            });\r\n\r\n            if ($scope.undoEnabled) {\r\n                undoTimeout = $timeout(() => {\r\n                    if ($scope.selected) {\r\n                        $scope.undoEnabled = false;\r\n                    }\r\n                }, 4000);\r\n            }\r\n        }\r\n\r\n        $scope.undo = () => {\r\n            $timeout.cancel(undoTimeout);\r\n\r\n            msgService.send({\r\n                type: \"USER_UNDO\",\r\n                message: {\r\n                    uuid: store.getUser().uuid\r\n                }\r\n            });\r\n        }\r\n\r\n        $scope.isSelected = (value) => {\r\n            return $scope.selectedValue === value;\r\n        }\r\n\r\n        $scope.$on(\"$destroy\", () => {\r\n            $timeout.cancel(undoTimeout);\r\n        });\r\n\r\n        function reset(data) {\r\n            if (!data.uuid || data.uuid === store.getUser().uuid) {\r\n                $scope.selectedValue = null;\r\n                $scope.selected = false;\r\n                $scope.undoEnabled = $scope.settings.undo;\r\n            }\r\n        }\r\n\r\n        function saveSettings(data) {\r\n            if (data.uuid === store.getUser().uuid) {\r\n                $scope.hostUuid = data.hostUuid;\r\n                $scope.settings = data.settings;\r\n                $scope.undoEnabled = $scope.settings.undo;\r\n            }\r\n        }\r\n\r\n        function onRemoved(data) {\r\n            if (data.uuid === store.getUser().uuid) {\r\n                toastr.warning(\"You have been removed from the channel.\", \"Warning\");\r\n                $scope.leaveChannel();\r\n            }\r\n        }\r\n\r\n        function onUserLeft(data) {\r\n            // The channel host left the channel, time to leave\r\n            if (data.uuid === $scope.hostUuid) {\r\n                toastr.warning(\"Channel host left. Leaving channel.\", \"Warning\");\r\n                $scope.leaveChannel();\r\n            }\r\n        }\r\n    }\r\n\r\n}());\r\n;(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('estimate')\r\n        .controller('LoginController', LoginController);\r\n\r\n    LoginController.$inject = ['$rootScope', '$scope', '$cookies', '$location', 'lodash', 'toastr', 'store', 'msgService'];\r\n\r\n    function LoginController ($rootScope, $scope, $cookies, $location, _, toastr, store, msgService) {\r\n        $scope.states = {\r\n            \"SELECT_MODE\": \"SELECT_MODE\",\r\n            \"CREATE_CHANNEL\": \"CREATE_CHANNEL\",\r\n            \"JOIN_CHANNEL\": \"JOIN_CHANNEL\",\r\n            \"SETTINGS\": \"SETTINGS\"\r\n        };\r\n\r\n        $scope.isLoading = false;\r\n        $scope.state = $scope.states.SELECT_MODE;\r\n        $scope.title = \"Estimation\";\r\n        $scope.defaultSettings = store.getSettings();\r\n        $scope.settings = getSettings();\r\n        \r\n        msgService.unsubscribe();\r\n        store.setUser({ name: null, channel: null, isHost: false });\r\n        store.subscribe(\"user\", onUserChanged);\r\n        \r\n        $scope.changeState = (newState) => {\r\n            $scope.state = newState;\r\n\r\n            switch(newState) {\r\n                case $scope.states.SELECT_MODE:\r\n                    $scope.title = \"Estimation\";\r\n                    $scope.channel = \"\";\r\n                    $scope.userName = \"\";\r\n                    $scope.channels = [];\r\n                    break;\r\n\r\n                case $scope.states.CREATE_CHANNEL:\r\n                    $scope.title = \"Create channel\";\r\n                    $scope.channel = $cookies.get(\"channel\") || \"\";\r\n                    break;\r\n\r\n                case $scope.states.SETTINGS:\r\n                    $scope.title = \"Settings\"\r\n                    break;\r\n                \r\n                case $scope.states.JOIN_CHANNEL:\r\n                    $scope.title = \"Join channel\";\r\n                    $scope.userName = $cookies.get(\"username\") || \"\";\r\n                    $scope.loadChannels();\r\n                    break;\r\n            }\r\n        }\r\n\r\n        $scope.back = () => {\r\n            switch ($scope.state) {\r\n                case $scope.states.CREATE_CHANNEL:\r\n                case $scope.states.JOIN_CHANNEL:\r\n                default:\r\n                    $scope.changeState($scope.states.SELECT_MODE);\r\n                    break;\r\n\r\n                case $scope.states.SETTINGS:\r\n                    $scope.changeState($scope.states.CREATE_CHANNEL);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        $scope.loadChannels = (callback = _.noop) => {\r\n            $scope.isLoading = true;\r\n            $scope.channels = [];\r\n\r\n            msgService.hereNow((status, data) => {\r\n                $scope.channels = _.keys(data.channels);\r\n                $scope.isLoading = false;\r\n\r\n                callback();\r\n            });\r\n        }\r\n\r\n        $scope.createChannel = (channel) => {\r\n            channel = channel.trim();\r\n\r\n            if (channel) {\r\n                toastr.info(\"Checking channel availability...\", \"Info\");\r\n\r\n                $scope.loadChannels(() => {\r\n                    if (_.includes($scope.channels, channel)) {\r\n                        toastr.error(\"Channel '\" + channel + \"' already exists.\", \"Error\");\r\n                        return;\r\n                    }\r\n\r\n                    msgService.subscribe(channel);\r\n                    store.setUser({ name: name, channel: channel });\r\n                    toastr.success(\"Channel '\" + channel + \"' created\", \"Success\");\r\n                    $cookies.put(\"channel\", channel);\r\n                    $location.path(\"/results\");\r\n                });\r\n            } else {\r\n                toastr.error(\"Please add a name to your channel.\", \"Error\");\r\n            }\r\n        }\r\n\r\n        $scope.joinChannel = (userName, channel) => {\r\n            userName = userName.trim();\r\n            channel = channel.trim();\r\n\r\n            if (userName && channel) {\r\n                store.setUser({ channel: channel, name: userName });\r\n                msgService.subscribe(channel);\r\n\r\n                $cookies.put(\"channel\", channel);\r\n                $cookies.put(\"username\", userName);\r\n\r\n                $location.path(\"/estimate\");\r\n            } else {\r\n                toastr.error(\"Please add a username.\", \"Error\");\r\n            }\r\n        }\r\n\r\n        $scope.saveSettingsToCookie = () => {\r\n            $cookies.put(\"settings\", JSON.stringify($scope.settings));\r\n        }\r\n\r\n        $scope.loadDefaultSettings = () => {\r\n            _.forIn($scope.defaultSettings, (value, key) => {\r\n                $scope.settings[key] = angular.copy(value);\r\n            });\r\n        }\r\n\r\n        $scope.$on(\"$destroy\", () => {\r\n            store.setSettings($scope.settings);\r\n            store.unsubscribe(onUserChanged);\r\n        });\r\n\r\n        function getSettings() {\r\n            let settings = store.getSettings();\r\n\r\n            let cookieSettingsString = $cookies.get(\"settings\");\r\n            let cookieSettings = cookieSettingsString ? JSON.parse(cookieSettingsString) : null;\r\n\r\n            return angular.merge(settings, cookieSettings);\r\n        }\r\n\r\n        function onUserChanged(user) {\r\n            if (!user.uuid) {\r\n                msgService.init();\r\n            }\r\n        }\r\n    }\r\n\r\n}());\r\n;(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('estimate')\r\n        .controller('MainController', MainController);\r\n\r\n    MainController.$inject = ['$rootScope', '$scope', '$location', 'store'];\r\n\r\n    function MainController ($rootScope, $scope, $location, store) {\r\n        $scope.user = null;\r\n\r\n        store.subscribe(\"user\", (user) => {\r\n            $scope.user = user;\r\n        });\r\n\r\n        $scope.hasChannel = () => {\r\n            return $scope.user.channel;\r\n        }\r\n\r\n        $scope.leaveChannel = () => {\r\n            $location.path(\"/login\");\r\n        }\r\n\r\n        $scope.isHost = () => {\r\n            return $scope.user.isHost;\r\n        }\r\n    }\r\n\r\n}());\r\n;(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('estimate')\r\n        .controller('ResultController', ResultController);\r\n\r\n    ResultController.$inject = ['$rootScope', '$scope', '$timeout', 'toastr', 'lodash', 'store', 'msgService'];\r\n\r\n    function ResultController ($rootScope, $scope, $timeout, toastr, _, store, msgService) {\r\n        $scope.settings = store.getSettings();\r\n        $scope.canUndo = $scope.settings.undo;\r\n        $scope.flip = false;\r\n        $scope.selectedCard = null;\r\n        $scope.cards = [];\r\n\r\n        msgService.listen(\"USER_PICKED\", onUserPicked);\r\n        msgService.listen(\"USER_JOINED\", onUserJoined);\r\n        msgService.listen(\"USER_UNDO\", onUserUndo);\r\n        msgService.listenPresence([\"leave\", \"timeout\"], onUserLeft);\r\n\r\n        store.setUser({ isHost: true });\r\n\r\n        let undoTimeout;\r\n        \r\n        $scope.reset = () => {\r\n            $scope.cards.forEach((card) => {\r\n                card.value = null;\r\n            });\r\n\r\n            msgService.send({\r\n                type: \"RESET\",\r\n                message: {\r\n                    uuid: null\r\n                }\r\n            });\r\n\r\n            $scope.canUndo = $scope.settings.undo;\r\n            $scope.flip = false;\r\n        }\r\n\r\n        $scope.selectCard = (card) => {\r\n            card.isSelected = !card.isSelected;\r\n\r\n            $scope.cards.forEach((_card) => {\r\n                if (card !== _card) {\r\n                    card.isSelected = false;\r\n                }\r\n            });\r\n\r\n            $scope.selectedCard = card.isSelected;\r\n        }\r\n\r\n        $scope.removeSelectedCard = () => {\r\n            $scope.selectedCard = null;\r\n\r\n            let card = _.find($scope.cards, \"isSelected\");\r\n\r\n            if (card) {\r\n                msgService.send({\r\n                    type: \"REMOVE\",\r\n                    message: {\r\n                        uuid: card.uuid\r\n                    }\r\n                });\r\n\r\n                _.pull($scope.cards, card);\r\n\r\n                checkStats();\r\n            }\r\n        }\r\n\r\n        function onUserLeft(data) {\r\n            let card = findCardByUuid(data.uuid);\r\n\r\n            if (card) {\r\n                _.remove($scope.cards, (_card) => {\r\n                    return card === _card;\r\n                });\r\n\r\n                checkStats();\r\n\r\n                toastr.info(\"User \" + card.name + \" left\", \"Info\");\r\n            }\r\n        }\r\n\r\n        function onUserJoined(user) {\r\n            let card = {\r\n                name: $scope.settings.showName ? user.name : \"<hidden>\",\r\n                uuid: user.uuid,\r\n                value: null\r\n            };\r\n\r\n            toastr.info(\"User \" + card.name + \" joined\", \"Info\");\r\n\r\n            sendSettingsToUser(user);\r\n            $scope.cards.push(card);\r\n            $scope.reset();\r\n        }\r\n\r\n        function onUserUndo(data) {\r\n            if ($scope.flip) {\r\n                return;\r\n            }\r\n\r\n            $timeout.cancel(undoTimeout);\r\n            let card = findCardByUuid(data.uuid);\r\n\r\n            if (card) {\r\n                card.value = null;\r\n                $scope.canUndo = true;\r\n                resetFor(card.uuid);\r\n            }\r\n        }\r\n\r\n        function onUserPicked(data) {\r\n            let card = findCardByUuid(data.uuid);\r\n\r\n            if (card) {\r\n                card.value = data.value;\r\n\r\n                checkStats();\r\n            }\r\n        }\r\n\r\n        function resetFor(uuid) {\r\n            msgService.send({\r\n                type: \"RESET\",\r\n                message: {\r\n                    uuid: uuid\r\n                }\r\n            });\r\n        }\r\n\r\n        function findCardByUuid(uuid) {\r\n            return _.find($scope.cards, { uuid: uuid });\r\n        }\r\n\r\n        function checkStats() {\r\n            let done = _.every($scope.cards, (card) => {\r\n                return card.value !== null;\r\n            });\r\n\r\n            if (done && $scope.cards.length) {\r\n                if ($scope.canUndo) {\r\n                    $scope.canUndo = false;\r\n\r\n                    // Wait extra 3 secs for the last client's possible undo\r\n                    undoTimeout = $timeout(checkStats, 3000);\r\n                } else {\r\n                    $scope.flip = true;\r\n                }\r\n            } else {\r\n                $scope.flip = false;\r\n            }\r\n        }\r\n\r\n        function sendSettingsToUser(user) {\r\n            let settingsToSend = angular.copy($scope.settings);\r\n            \r\n            // Only the accepted values are sent as an array\r\n            settingsToSend.values = _.reduce(settingsToSend.values, (result, value, key) => {\r\n                if (value) {\r\n                    result.push(key);\r\n                }\r\n\r\n                return result;\r\n            }, []);\r\n\r\n            msgService.send({\r\n                type: \"SETTINGS\",\r\n                message: {\r\n                    uuid: user.uuid,\r\n                    hostUuid: store.getUser().uuid,\r\n                    settings: settingsToSend\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n}());\r\n;(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('estimate')\r\n        .factory('msgService', msgService);\r\n\r\n    msgService.$inject = [\"$rootScope\", \"$cookies\", \"store\", \"lodash\"];\r\n\r\n    function msgService($rootScope, $cookies, store, _) {\r\n        let pubNub = null;\r\n        let listeners = [];\r\n\r\n        return {\r\n            // Init PubNub, set userStore's user uuid\r\n            init: init,\r\n\r\n            // Subscribe for channel\r\n            subscribe: subscribe,\r\n\r\n            // Unsubscribe from channel\r\n            unsubscribe: unsubscribe,\r\n\r\n            // Send message\r\n            send: send,\r\n\r\n            // Listen to messages\r\n            listen: listen,\r\n\r\n            // Listen to presence messages\r\n            listenPresence: listenPresence,\r\n\r\n            // Get all existing channels and connected devices\r\n            hereNow: hereNow\r\n        };\r\n\r\n        function init() {\r\n            let uuid = $cookies.get(\"uuid\");\r\n\r\n            if (!uuid) {\r\n                uuid = PubNub.generateUUID();\r\n                $cookies.put(\"uuid\", uuid);\r\n            }\r\n\r\n            store.setUser({\r\n                uuid: uuid\r\n            });\r\n            \r\n            pubNub = new PubNub({\r\n                publishKey: 'pub-c-69789d50-67b0-4cf4-80b6-368360332773',\r\n                subscribeKey: 'sub-c-82db2fb2-eca4-11e6-889b-02ee2ddab7fe',\r\n                uuid: uuid\r\n            });\r\n        }\r\n\r\n        function subscribe(channel = store.getUser().channel) {\r\n            pubNub.subscribe({\r\n                channels: [channel],\r\n                withPresence: true\r\n            });\r\n        }\r\n\r\n        function unsubscribe(channel = store.getUser().channel) {\r\n            if (pubNub) {\r\n                listeners.forEach(pubNub.removeListener);\r\n                \r\n                pubNub.unsubscribe({\r\n                    channels: [channel]\r\n                });\r\n\r\n                listeners = [];\r\n            }\r\n        }\r\n\r\n        function send(data, channel = store.getUser().channel) {\r\n            pubNub.publish({\r\n                message: data,\r\n                channel: channel\r\n            });\r\n        }\r\n\r\n        function listen(type, callback) {\r\n            let listener = {\r\n                message: (data) => {\r\n                    if (type === \"ANY\" || data.message.type === type) {\r\n                        $rootScope.$evalAsync(() => callback(data.message.message));\r\n                    }\r\n                }\r\n            }\r\n\r\n            listeners.push(listener);\r\n            pubNub.addListener(listener);\r\n        }\r\n\r\n        function listenPresence(actions, callback) {\r\n            let listener = {\r\n                presence: (data) => {\r\n                    // User will not get his/her own presence messages\r\n                    if (data.uuid === store.getUser().uuid) {\r\n                        return;\r\n                    }\r\n\r\n                    if (_.includes(actions, data.action) || _.includes(actions, \"ANY\")) {\r\n                        $rootScope.$evalAsync(() => callback(data));\r\n                    }\r\n                }\r\n            };\r\n\r\n            listeners.push(listener);\r\n            pubNub.addListener(listener);\r\n        }\r\n\r\n        function hereNow(callback) {\r\n            let pubNubCallback = (...params) => $rootScope.$evalAsync(() => callback(...params));\r\n\r\n            pubNub.hereNow({ uuids: false }, pubNubCallback);\r\n        }\r\n    }\r\n\r\n}());;(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('estimate')\r\n        .factory('store', store);\r\n\r\n    store.$inject = [\"$rootScope\", \"lodash\"];\r\n\r\n    function store($rootScope, _) {\r\n        let subscriptions = [];\r\n\r\n        // Default settings\r\n        let store = {\r\n            settings: {},\r\n            user: {}\r\n        };\r\n      \r\n        return {\r\n            // Subscribe for store changes\r\n            // Callback gets called with the updated value only (no oldVal as in angular)\r\n            // Callback gets called once immediately after subscribing!\r\n            subscribe: subscribe,\r\n\r\n            // Unsubscribe from store changes\r\n            unsubscribe: unsubscribe,\r\n\r\n            // Returns settings\r\n            getSettings: getSettings,\r\n\r\n            // Set the settings\r\n            setSettings: setSettings,\r\n\r\n            // Sets the user's given properties (other properties will not change!)\r\n            setUser: setUser,\r\n\r\n            // Returns user object\r\n            getUser: getUser\r\n        };\r\n\r\n        function subscribe(key, callback) {\r\n            let unsubscribe = $rootScope.$watchCollection(() => {\r\n                return store[key];\r\n            }, (newVal, oldVal) => {\r\n                callback(newVal);\r\n            }, true);\r\n\r\n            subscriptions.push({\r\n                originalCallback: callback,\r\n                unsubscribe: unsubscribe\r\n            });\r\n        }\r\n\r\n        function unsubscribe(callback) {\r\n            let subscription = _.find(subscriptions, { originalCallback: callback });\r\n            \r\n            if (subscription) {\r\n                subscription.unsubscribe();\r\n\r\n                _.pull(subscriptions, subscription);\r\n            }\r\n        }\r\n\r\n        function getSettings() {\r\n            return angular.copy(store.settings);\r\n        }\r\n\r\n        function getUser() {\r\n            return store.user;\r\n        }\r\n\r\n        function setSettings(settings) {\r\n            store.settings = settings;\r\n        }\r\n\r\n        function setUser(user) {\r\n            angular.merge(store.user, user);\r\n        }\r\n    }\r\n\r\n}());"]}